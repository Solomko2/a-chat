type User @model {
  id: ID!
  name: String!
  imageUrl: String
  status: String
  chatRoomUsers: [ChatRoomUser] @connection(keyName: "byUser", fields: ["id"])
}

type ChatRoomUser
@model
@key(name: "byUser", fields: ["userID", "chatRoomID"])
@key(name: "byChatRoom", fields: ["chatRoomID", "userID"])
{
  id: ID!
  userID: ID!
  chatRoomID: ID!
  user: User @connection(fields: ["userID"])
  chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
}

type ChatRoom @model {
  id: ID!
  chatRoomUsers: [ChatRoomUser] @connection(keyName: "byChatRoom", fields: ["id"])
  messages: [Message] @connection(keyName: "byChatRoom", fields: ["id"])
  lastMessageID: ID!
  lastMessage: Message @connection(fields: ["lastMessageID"])
}

type Message
@model
@key(
  name: "byChatRoom",
  fields: ["chatRoomID", "createdAt"],
  queryField: "messagesByChatRoom"
) {
  id: ID!
  body: String! @assert(condition: ".length() < 120")
  userID: ID!
  chatRoomID: ID!
  createdAt: String!
  user: User @connection(fields: ["userID"])
  chatRoom: ChatRoom @connection(fields: ["chatRoomID"])
}